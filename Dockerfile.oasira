# Automatically generated by hassfest.
#
# To update, run python3 -m script.hassfest -p docker
ARG BUILD_FROM
FROM ghcr.io/home-assistant/amd64-homeassistant-base:2024.11.0

# Synchronize with homeassistant/core.py:async_stop
ENV \
    S6_SERVICES_GRACETIME=240000 \
    UV_SYSTEM_PYTHON=true \
    UV_NO_CACHE=true

ARG QEMU_CPU

# Install uv
RUN pip install uv==0.5.0

WORKDIR /usr/src

## Setup Home Assistant Core dependencies
COPY requirements.txt homeassistant/
COPY homeassistant/package_constraints.txt homeassistant/homeassistant/
RUN \
    uv pip install \
    # --no-build \
    -r homeassistant/requirements.txt

COPY requirements_all.txt frontend-* home_assistant_intents-* homeassistant/
#COPY requirements_oasira.txt home_assistant_frontend-* home_assistant_intents-* homeassistant/
RUN \
    if ls homeassistant/home_assistant_*.whl 1> /dev/null 2>&1; then \
    uv pip install homeassistant/home_assistant_*.whl; \
    fi \
    && uv pip install \
    #        #--no-build \
    -r homeassistant/requirements_all.txt

## Setup Home Assistant Core
COPY . homeassistant/
RUN \
    uv pip install \
    -e ./homeassistant \
    && python3 -m compileall \
    homeassistant/homeassistant

# Home Assistant S6-Overlay
COPY rootfs /

COPY . homeassistant/

# Get go2rtc binary
RUN \
    curl -L https://github.com/AlexxIT/go2rtc/releases/download/v1.9.7/go2rtc_linux_amd64 --output /bin/go2rtc \
    && chmod +x /bin/go2rtc \
    # Verify go2rtc can be executed
    && go2rtc --version

WORKDIR /config

# Expose port 8123 for Home Assistant
EXPOSE 8123

# Run Home Assistant Core
CMD ["hass", "-c", "/config"]
#CMD ["hass", "-c", "/usr/src/homeassistant/config"]