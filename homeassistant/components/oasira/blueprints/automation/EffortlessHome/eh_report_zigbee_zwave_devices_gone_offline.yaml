blueprint:
  name: Report offline smart devices
  description: Works with Smart Plugs, ZWave, Zigbee etc.
  domain: automation
  author: EffortlessHome
  input:
    time:
      name: Time to test on
      description: Test is run at configured time
      default: "10:00:00"
      selector:
        time: {}
    exclude:
      name: Excluded Sensors
      description:
        Battery sensors (e.g. smartphone) to exclude from detection. Only
        entities are supported, devices must be expanded!
      default:
        entity_id: []
      selector:
        target:
          entity:
            - device_class:
                - battery
                - switch
                - sensor
                - lock
                - light
                - binary_sensor
    actions:
      name: Actions
      description: Take any actions here. Use the param {{offline_devices}} in your message to inform what is offline.
      selector:
        action: {}

variables:
  exclude: !input exclude
  offline_devices:
    "{% set result = namespace(offline_devices=[]) %} {% for sensor
    in states.sensor | selectattr('attributes.device_class', 'defined') | selectattr('attributes.device_class',
    '==', 'battery') %}\n  {% if \"unavailable\" in sensor | string  and not sensor.entity_id
    in exclude.entity_id %}\n    {% set result.offline_devices = result.offline_devices
    + [device_attr(device_id(sensor.entity_id), \"name\")] %}\n  {% endif %}\n{% endfor
    %} {% for binary_sensor in states.binary_sensor | selectattr('attributes.device_class',
    'defined') | selectattr('attributes.device_class', '==', 'battery') %}\n  {% if
    \"unavailable\" in binary_sensor | string and not binary_sensor.entity_id in exclude.entity_id
    %}\n    {% set result.offline_devices = result.offline_devices + [device_attr(device_id(binary_sensor.entity_id),
    \"name\")] %}\n  {% endif %}\n{% endfor %} {% for switch in states.switch | selectattr('state','eq','unavailable')
    %}\n  {% if switch.entity_id not in exclude.entity_id %}\n    {% set result.offline_devices
    = result.offline_devices + [device_attr(device_id(switch.entity_id), \"name\")]
    %}\n  {% endif %}\n{% endfor %} {{result.offline_devices|sort|unique|join('\\n')}}"
trigger:
  - platform: time
    at: !input time
condition:
  - "{{ offline_devices != '' }}"
action:
  - choose: []
    default: !input actions
mode: single
